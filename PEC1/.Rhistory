library(MASS)
data("bacteria")
kable(head(bacteria))
library(readr)
library(knitr)
healthcare <- read_csv('healthcare_dataset.csv')
kable(head(healthcare, 10))
setwd("~/Carlos/R-Inferencia_estadistica/PEC1")
library(readr)
library(knitr)
healthcare <- read_csv('healthcare_dataset.csv')
kable(head(healthcare, 10))
summary(healthcare)
kable(tail(healthcare, 10))
table(is.na(healthcare))
kable(tail(healthcare, 10))
na_count <-sapply(x, function(y) sum(length(which(is.na(y)))))
na_count <-sapply(healthcare, function(y) sum(length(which(is.na(y)))))
na_count <- healthcare(na_count)
colSums(is.na(healthcare))
View(healthcare)
table(is.na(healthcare))
print(table(is.na(healthcare)))
print(colSums(is.na(healthcare)))
print(dim(healthcare))
print(summary(healthcare))
print(table(is.na(healthcare)))
print(colSums(is.na(healthcare)))
View(healthcare)
View(healthcare)
library(MASS)
data("bacteria")
kable(head(bacteria))
print(table(is.na(bacteria)))
print(colSums(is.na(bacteria)))
library(MASS)
data("bacteria")
kable(head(bacteria, 20))
print(table(is.na(bacteria)))
print(colSums(is.null(bacteria)))
print(table(is.na(bacteria)))
print(colSums(is.na(bacteria)))
print(table(is.null(bacteria)))
print(colSums(is.na(bacteria)))
print(table(is.na(bacteria)))
print(colSums(is.na(bacteria)))
print(table(is.null(healthcare)))
print(colSums(is.na(healthcare)))
print(table(is.na(healthcare)))
print(colSums(is.na(healthcare)))
View(healthcare)
View(bacteria)
write.csv(bacteria, file='/c/Users/DELL/Documents/Carlos/R-Inferencia_estadistica/PEC1/bacteria.csv')
write.csv(bacteria, file='bacteria.csv')
write.csv(bacteria, file='Resultados/bacteria.csv')
data("Melanoma")
kable(head(Melanoma, 15))
data("Melanoma")
print(kable(head(Melanoma, 15)))
print(table(is.na(Melanoma)))
print(colSums(is.na(Melanoma)))
data("Melanoma")
kable(head(Melanoma, 15))
print(table(is.na(Melanoma)))
print(colSums(is.na(Melanoma)))
data("biopsy")
kable(head(biopsy, 15))
print(table(is.na(biopsy)))
print(colSums(is.na(biopsy)))
View(biopsy)
View(biopsy)
View(biopsy)
View(healthcare)
healthcare_f <- subset(healthcare, Gender = 'Female')
healthcare_m <- subset(healthcare, Gender = 'Male')
healthcare_f <- subset(healthcare, Gender == 'Female')
healthcare_m <- subset(healthcare, Gender == 'Male')
View(healthcare_f)
healthcare_f <- subset(healthcare, Gender == 'Female')
healthcare_m <- filter(healthcare, Gender == 'Male')
healthcare_f <- subset(healthcare, Gender == 'Female')
healthcare_m <- subset(healthcare, Gender == 'Male')
healthcare_f <- subset(healthcare, Gender == 'Female')
healthcare_m <- subset(healthcare, Gender == 'Male')
write.csv(healthcare_f, file='Resultados/healthcare_f.csv')
write.csv(healthcare_m, file='Resultados/healthcare_m.csv')
View(healthcare)
View(healthcare)
media_abp <- mean(subset(healthcare, Blood.Type == 'AB+'))
media_abp <- mean(subset(healthcare, 'Blood Type' == 'AB+'))
View(healthcare)
media_abp <- mean(subset(healthcare, Blood.Type == 'AB+'))
media_abp <- mean(subset(healthcare, `Blood Type` == 'AB+'))
View(healthcare)
media_abp <- mean(subset(healthcare, `Blood Type` == 'AB+')$Age)
media_abp <- mean(subset(healthcare, `Blood Type` == 'AB+')$Age)
print(round(media_abp,2))
media_abp <- mean(subset(healthcare, `Blood Type` == 'AB+')$Age)
print(round(media_abp,3))
media_abp <- mean(subset(healthcare, `Blood Type` == 'AB+')$Age)
print(round(media_abp,2))
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
print(summary(media_abp))
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
print(summary(grupo_abp))
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
subset_data <- subset(healthcare, select = c(`Medical Condition`, Medication, `Test.Results`))
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
subset_data <- subset(healthcare, select = c(`Medical Condition`, Medication, `Test Results`))
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
sub_healt <- subset(healthcare, select = c(`Medical Condition`, Medication, `Test Results`))
summary(sub_healt)
View(healthcare_m)
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
sub_healt <- subset(healthcare, select = c(`Medical Condition`, Medication, `Test Results`))
tabe(sub_healt)
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
sub_healt <- subset(healthcare, select = c(`Medical Condition`, Medication, `Test Results`))
table(sub_healt)
View(healthcare)
grupo_abp <- subset(healthcare, Gender == 'Male' & `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
sub_healt <- subset(grupo_abp, select = c(`Medical Condition`, Medication, `Test Results`))
table(sub_healt)
sub_healt <- subset(grupo_abp, select = c(`Medical Condition`, Medication, `Test Results`))
prop.table(sub_healt)
sub_healt <- subset(grupo_abp, select = c(`Medical Condition`, Medication, `Test Results`))
table(sub_healt)
View(healthcare)
View(healthcare)
healthcare_maxb <- subset(healthcare, `Billing Amount` == max(`Billing Amount`))
healthcare_maxb <- subset(healthcare, `Billing Amount` == max(`Billing Amount`))
healthcare_maxb
healthcare_maxb <- subset(healthcare, `Billing Amount` == max(`Billing Amount`))
kable(healthcare_maxb)
View(healthcare_maxb)
remote_mental <- read.csv(file = 'Impact_of_Remote_Work_on_Mental_Healt.csv')
remote_mental <- read.csv(file = 'Impact_of_Remote_Work_on_Mental_Health.csv')
summary(remote_mental)
install.packages("plotly")
library(plotly)
graf1 <- plot_ly(y = remote_mental$Age, type = "box")
graf2 <- graf1 %>% add_trace(y = remote_mental$Hours_Worked_Per_Week)
graf2
library(plotly)
graf1 <- plotly(y = remote_mental$Age, type = "box", name = 'Edad')
library(plotly)
graf1 <- plot_ly(y = remote_mental$Age, type = "box", name = 'Edad')
graf2 <- graf1 %>% add_trace(y = remote_mental$Hours_Worked_Per_Week, name= 'Horas trabajadas por semana')
graf2
pairs(remote_mental)
View(remote_mental)
remote_mental_numeric <- subset(remote_mental, select =  c(Age, Years_of_Experience,
Hours_Worked_Per_Week, Number_of_Virtual_Meetings,
Work_Life_Balance_Rating, Social_Isolation_Rating,
Company_Support_for_Remote_Work))
pairs(remote_mental_numeric)
View(remote_mental)
cor	(remote_mental)
remote_mental_numeric <- subset(remote_mental, select =  c(Age, Years_of_Experience,
Hours_Worked_Per_Week, Number_of_Virtual_Meetings,
Work_Life_Balance_Rating, Social_Isolation_Rating,
Company_Support_for_Remote_Work))
cor	(remote_mental)
remote_mental_numeric <- subset(remote_mental, select =  c(Age, Years_of_Experience,
Hours_Worked_Per_Week, Number_of_Virtual_Meetings,
Work_Life_Balance_Rating, Social_Isolation_Rating,
Company_Support_for_Remote_Work))
cor	(remote_mental_numeric)
remote_mental_numeric <- subset(remote_mental, select =  c(Age, Years_of_Experience,
Hours_Worked_Per_Week, Number_of_Virtual_Meetings,
Work_Life_Balance_Rating, Social_Isolation_Rating,
Company_Support_for_Remote_Work))
kable(cor	(remote_mental_numeric))
f_relative <- prop.table(remote_mental$Job_Role)
f_relative <- table(remote_mental$Job_Role)
f_relative <- table(remote_mental$Job_Role)
f_relative
f_relative <- prop.table(table(remote_mental$Job_Role))
f_relative
library(plotly)
graf1 <- plot_ly(x = remote_mental$Age, y = remote_mental$Hours_Worked_Per_Week, type = "box")
library(plotly)
graf1 <- plot_ly(x = remote_mental$Age, y = remote_mental$Hours_Worked_Per_Week, type = "box")
graf1
library(readr)
library(knitr)
healthcare <- read_csv('healthcare_dataset.csv')
kable(head(healthcare, 10)) # Primeros 10 registros
kable(tail(healthcare, 10)) # Ãšltimos 10 registros
print(dim(healthcare))
print(summary(healthcare))
print(table(is.na(healthcare)))
print(colSums(is.na(healthcare)))
library(MASS)
data("bacteria")
print(kable(summary(bacteria)))
print(kable(head(bacteria, 20)))
print(table(is.na(bacteria)))
print(colSums(is.na(bacteria)))
write.csv(bacteria, file='Resultados/bacteria.csv')
data("biopsy")
kable(head(biopsy, 15))
print(table(is.na(biopsy)))
print(colSums(is.na(biopsy)))
healthcare_f <- subset(healthcare, Gender == 'Female') # Filtra si Gender es igual a Female
healthcare_m <- subset(healthcare, Gender == 'Male') # Filtra si Gender es igual a Male
write.csv(healthcare_f, file='Resultados/healthcare_f.csv') # Guarda '.csv' con filtro Female
write.csv(healthcare_m, file='Resultados/healthcare_m.csv') # Guarda '.csv' con filtro Male
grupo_abp <- subset(healthcare, Gender == 'Male' & `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
sub_healt <- subset(grupo_abp, select = c(`Medical Condition`, Medication, `Test Results`))
table(sub_healt)
healthcare_maxb <- subset(healthcare, `Billing Amount` == max(`Billing Amount`))
kable(healthcare_maxb)
healthcare_matrix <- matrix(c(healthcare$Gender, healthcare$`Medical Condition`,
healthcare$Medication, healthcare$`Test Results`),
ncol = 4)
head(healthcare_matrix)
emergencia <- subset(healthcare, `Admission Type` == 'Emergency')
table(emergencia$`Test Results`,emergencia$`Medical Condition`)
remote_mental <- read.csv(file = 'Impact_of_Remote_Work_on_Mental_Health.csv')
summary(remote_mental)
print(table(remote_mental$Industry))
print(table(remote_mental$Stress_Level))
print(table(remote_mental$Mental_Health_Condition))
print(table(remote_mental$Access_to_Mental_Health_Resources))
print(table(remote_mental$Productivity_Change))
library(plotly)
graf1 <- plot_ly(x = remote_mental$Age, y = remote_mental$Hours_Worked_Per_Week, type = "box")
graf1
remote_mental_numeric <- subset(remote_mental, select =  c(Age, Years_of_Experience,
Hours_Worked_Per_Week, Number_of_Virtual_Meetings,
Work_Life_Balance_Rating, Social_Isolation_Rating,
Company_Support_for_Remote_Work))
kable(cor	(remote_mental_numeric))
pairs(remote_mental_numeric)
recode <- remote_mental
recode$Stress_Level[recode$Stress_Level=='Low'] <- 1
recode$Stress_Level[recode$Stress_Level=='Medium'] <- 2
recode$Stress_Level[recode$Stress_Level=='High'] <- 3
recode$Stress_Level <- as.integer(recode$Stress_Level)
recode$Productivity_Change[recode$Productivity_Change=='Decrease'] <- 1
recode$Productivity_Change[recode$Productivity_Change=='No Change'] <- 2
recode$Productivity_Change[recode$Productivity_Change=='Increase'] <- 3
recode$Productivity_Change <- as.integer(recode$Productivity_Change)
recode$Satisfaction_with_Remote_Work[recode$Satisfaction_with_Remote_Work=='Unsatisfied'] <- 1
recode$Satisfaction_with_Remote_Work[recode$Satisfaction_with_Remote_Work=='Neutral'] <- 2
recode$Satisfaction_with_Remote_Work[recode$Satisfaction_with_Remote_Work=='Satisfied'] <- 3
recode$Satisfaction_with_Remote_Work <- as.integer(recode$Satisfaction_with_Remote_Work)
recode_numeric <- subset(recode, select =  c(Age, Years_of_Experience,
Hours_Worked_Per_Week, Number_of_Virtual_Meetings,
Work_Life_Balance_Rating, Social_Isolation_Rating,
Company_Support_for_Remote_Work, Stress_Level,
Productivity_Change, Satisfaction_with_Remote_Work))
kable(cor	(recode_numeric))
pairs(recode_numeric)
kable(table(remote_mental$Job_Role))
kable(prop.table(table(remote_mental$Job_Role)))
print('Frecuencia absoluta Mental_Health_Condition')
kable(table(remote_mental$Mental_Health_Condition))
print('Frecuencia relativa Mental_Health_Condition')
kable(prop.table(table(remote_mental$Mental_Health_Condition)))
print('Frecuencia relativa cruzada:  Job_Role y Mental_Health_Condition')
kable(prop.table(table(remote_mental$Job_Role,remote_mental$Mental_Health_Condition)))
hist(remote_mental$Hours_Worked_Per_Week, breaks=20, col="#99d8c9",
xlab = 'Horas trabajadas por semana',
main="Horas trabajadas por semana")
library(RColorBrewer)
color <- brewer.pal(5, "Set2")
barplot(table(remote_mental$Mental_Health_Condition),
col=color,
xlab = 'Condicion Mental',
ylab = 'NÂ° de trabajadores')
layout(matrix(c(1, 2), nrow = 1, byrow = TRUE), widths = c(20,20) )
hist(remote_mental$Hours_Worked_Per_Week, breaks=20, col="#99d8c9",
xlab = 'Horas trabajadas por semana',
ylab = 'Frecuencia',
main="Horas trabajadas por semana")
color <- brewer.pal(5, "Set2")
barplot(table(remote_mental$Mental_Health_Condition),
col=color,
ylab = 'NÂ° de trabajadores',
main="CondiciÃ³n mental por trabajador",
las=2)
library(ggplot2)
qplot(Job_Role,
Hours_Worked_Per_Week,
data=remote_mental,
geom="violin",
stackdir = "center",
fill = Job_Role,
xlab="Rol",
ylab="Horas Trabajadas por Semana",
)
library(ggplot2)
qplot(Job_Role,
Hours_Worked_Per_Week,
data = remote_mental,
geom=c("boxplot", "jitter"),
fill = Job_Role,
xlab="Rol",
ylab="Horas Trabajadas por Semana")
View(remote_mental)
View(remote_mental)
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap()
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap(matriz)
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap(matriz, Colv = NA, Rowv = NA, scale="column")
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap(matriz,
Colv = NA,
Rowv = NA,
scale="column",
fill=matriz)
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
ggplot(matriz, aes(X, Y, fill= Z)) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum()
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
ggplot(matriz)) +
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
ggplot(matriz, aes(X, Y)) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum()
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap(matriz,
Colv = NA,
Rowv = NA,
scale="column",
fill=matriz)
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap(matriz,
Colv = NA,
Rowv = NA)
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap(matriz,
Colv = NA,
Rowv = NA) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum()
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap(matriz,
Colv = NA,
Rowv = NA) +
geom_tile() +
scale_fill_gradient(low="white", high="blue")
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap(matriz,
Colv = NA,
Rowv = NA) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
scale_alpha_discrete()
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap(matriz,
Colv = NA,
Rowv = NA) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
scale_colour_continuous()
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
heatmap(matriz,
Colv = NA,
Rowv = NA) +
geom_tile() +
scale_fill_gradient(low="white", high="blue") +
scale_colour_continuous() +
theme(legend.position = 'outside')
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
library(viridis)
ggplot(matriz, aes(Job_Role, Mental_Health_Condition)) +
geom_tile() +
scale_fill_viridis(discrete=FALSE) +
theme_ipsum()
matriz <- table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition)
matriz
matriz <- prop.table(table(remote_mental$Job_Role, remote_mental$Mental_Health_Condition))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Job_Role", "Mental_Health_Condition", "Frecuencia")
ggplot(matriz_df, aes(x = Job_Role, y = Mental_Health_Condition, fill = Frecuencia)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Job Role", y = "Mental Health Condition")
View(matriz_df)
View(remote_mental)
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Job_Role, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_colour_gradient2() +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_colour_gradient() +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_colour_gradientn() +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_colour_gradient4() +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_colour_gradient2() +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_colour_gradient() +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_colour_gradient(low = "white", high = "red") +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_colour_gradient(low = "white", high = "red") +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")
library(ggplot2)
qplot(Job_Role,
Hours_Worked_Per_Week,
data = remote_mental,
geom="boxplot",
fill = Job_Role,
xlab="Rol",
ylab="Horas Trabajadas por Semana")
matriz <- prop.table(table(remote_mental$Mental_Health_Condition, remote_mental$Region))
matriz_df <- as.data.frame(matriz)
colnames(matriz_df) <- c("Mental_Health_Condition", "Region", "Frecuencia")
ggplot(matriz_df, aes(x = Mental_Health_Condition, y = Region, fill = Frecuencia)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
theme_minimal() +
labs(title = "Heatmap de Frecuencia", x = "Mental Health Condition", y = "Region")

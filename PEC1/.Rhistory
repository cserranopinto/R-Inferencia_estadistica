1+1
install.packages("devtools")
library("devtools")
devtools::install_github("benjjneb/dada2", ref="v1.16")
library("dada2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.11")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.19")
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
a
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2")
packageVersion("dada2")
library("dada2")
install.packages("tidyverse")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install(c("phyloseq", "microbiome", "ComplexHeatmap"), update = FALSE)
library(microViz)
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install(c("phyloseq", "microbiome", "ComplexHeatmap"), update = FALSE, force=TRUE)
library(microViz)
library(phyloseq)
library(dplyr)
library(ggplot2)
# get some example data
data("dietswap", package = "microbiome")
# create a couple of numerical variables to use as constraints or conditions
dietswap <- dietswap %>%
ps_mutate(
weight = recode(bmi_group, obese = 3, overweight = 2, lean = 1),
female = if_else(sex == "female", true = 1, false = 0),
african = if_else(nationality == "AFR", true = 1, false = 0)
)
library(phyloseq)
library(tidyverse)
library(ggplot2)
# get some example data
data("dietswap", package = "microbiome")
# create a couple of numerical variables to use as constraints or conditions
dietswap <- dietswap %>%
ps_mutate(
weight = recode(bmi_group, obese = 3, overweight = 2, lean = 1),
female = if_else(sex == "female", true = 1, false = 0),
african = if_else(nationality == "AFR", true = 1, false = 0)
)
library(microViz)
library(microViz)
library(microViz)
install.packages(
"microViz",
repos = c(davidbarnett = "https://david-barnett.r-universe.dev", getOption("repos"))
)
install.packages("ggtext") # for rotated labels on ord_plot()
install.packages("ggraph") # for taxatree_plots()
install.packages("DT") # for tax_fix_interactive()
install.packages("corncob") # for beta binomial models in tax_model()
library(microViz)
#> microViz version 0.12.3.9000 - Copyright (C) 2021-2024 David Barnett
#> ! Website: https://david-barnett.github.io/microViz
#> ✔ Useful?  For citation details, run: `citation("microViz")`
#> ✖ Silence? `suppressPackageStartupMessages(library(microViz))`
library(microViz)
#> microViz version 0.12.3.9000 - Copyright (C) 2021-2024 David Barnett
#> ! Website: https://david-barnett.github.io/microViz
#> ✔ Useful?  For citation details, run: `citation("microViz")`
#> ✖ Silence? `suppressPackageStartupMessages(library(microViz))`
#> # example data from corncob package
pseq <- microViz::ibd %>%
tax_fix() %>%
phyloseq_validate()
ord_explore(pseq) # gif generated with microViz version 0.7.4 (plays at 1.75x speed)
setwd("~/Master/R-Inferencia_estadistica/PEC1")
healthcare <- read_csv('healthcare_dataset.csv')
library(readr)
healthcare <- read_csv('healthcare_dataset.csv')
View(healthcare)
library(readr)
library(knitr)
healthcare <- read_csv('healthcare_dataset.csv')
library(readr)
library(knitr)
healthcare <- read_csv('healthcare_dataset.csv')
kable(head(healthcare, 10))
library(MASS)
library(MASS)
bacteria <- data("bacteria")
table(is.na(bacteria))
library(MASS)
bacteria <- data("bacteria")
kable(bacteria)
library(MASS)
data("bacteria")
kable(bacteria)
library(MASS)
data("bacteria")
kable(bacteria)
library(MASS)
data("bacteria")
kable(head(bacteria))
library(readr)
library(knitr)
healthcare <- read_csv('healthcare_dataset.csv')
kable(head(healthcare, 10))
setwd("~/Carlos/R-Inferencia_estadistica/PEC1")
library(readr)
library(knitr)
healthcare <- read_csv('healthcare_dataset.csv')
kable(head(healthcare, 10))
summary(healthcare)
kable(tail(healthcare, 10))
table(is.na(healthcare))
kable(tail(healthcare, 10))
na_count <-sapply(x, function(y) sum(length(which(is.na(y)))))
na_count <-sapply(healthcare, function(y) sum(length(which(is.na(y)))))
na_count <- healthcare(na_count)
colSums(is.na(healthcare))
View(healthcare)
table(is.na(healthcare))
print(table(is.na(healthcare)))
print(colSums(is.na(healthcare)))
print(dim(healthcare))
print(summary(healthcare))
print(table(is.na(healthcare)))
print(colSums(is.na(healthcare)))
View(healthcare)
View(healthcare)
library(MASS)
data("bacteria")
kable(head(bacteria))
print(table(is.na(bacteria)))
print(colSums(is.na(bacteria)))
library(MASS)
data("bacteria")
kable(head(bacteria, 20))
print(table(is.na(bacteria)))
print(colSums(is.null(bacteria)))
print(table(is.na(bacteria)))
print(colSums(is.na(bacteria)))
print(table(is.null(bacteria)))
print(colSums(is.na(bacteria)))
print(table(is.na(bacteria)))
print(colSums(is.na(bacteria)))
print(table(is.null(healthcare)))
print(colSums(is.na(healthcare)))
print(table(is.na(healthcare)))
print(colSums(is.na(healthcare)))
View(healthcare)
View(bacteria)
write.csv(bacteria, file='/c/Users/DELL/Documents/Carlos/R-Inferencia_estadistica/PEC1/bacteria.csv')
write.csv(bacteria, file='bacteria.csv')
write.csv(bacteria, file='Resultados/bacteria.csv')
data("Melanoma")
kable(head(Melanoma, 15))
data("Melanoma")
print(kable(head(Melanoma, 15)))
print(table(is.na(Melanoma)))
print(colSums(is.na(Melanoma)))
data("Melanoma")
kable(head(Melanoma, 15))
print(table(is.na(Melanoma)))
print(colSums(is.na(Melanoma)))
data("biopsy")
kable(head(biopsy, 15))
print(table(is.na(biopsy)))
print(colSums(is.na(biopsy)))
View(biopsy)
View(biopsy)
View(biopsy)
View(healthcare)
healthcare_f <- subset(healthcare, Gender = 'Female')
healthcare_m <- subset(healthcare, Gender = 'Male')
healthcare_f <- subset(healthcare, Gender == 'Female')
healthcare_m <- subset(healthcare, Gender == 'Male')
View(healthcare_f)
healthcare_f <- subset(healthcare, Gender == 'Female')
healthcare_m <- filter(healthcare, Gender == 'Male')
healthcare_f <- subset(healthcare, Gender == 'Female')
healthcare_m <- subset(healthcare, Gender == 'Male')
healthcare_f <- subset(healthcare, Gender == 'Female')
healthcare_m <- subset(healthcare, Gender == 'Male')
write.csv(healthcare_f, file='Resultados/healthcare_f.csv')
write.csv(healthcare_m, file='Resultados/healthcare_m.csv')
View(healthcare)
View(healthcare)
media_abp <- mean(subset(healthcare, Blood.Type == 'AB+'))
media_abp <- mean(subset(healthcare, 'Blood Type' == 'AB+'))
View(healthcare)
media_abp <- mean(subset(healthcare, Blood.Type == 'AB+'))
media_abp <- mean(subset(healthcare, `Blood Type` == 'AB+'))
View(healthcare)
media_abp <- mean(subset(healthcare, `Blood Type` == 'AB+')$Age)
media_abp <- mean(subset(healthcare, `Blood Type` == 'AB+')$Age)
print(round(media_abp,2))
media_abp <- mean(subset(healthcare, `Blood Type` == 'AB+')$Age)
print(round(media_abp,3))
media_abp <- mean(subset(healthcare, `Blood Type` == 'AB+')$Age)
print(round(media_abp,2))
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
print(summary(media_abp))
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
print(summary(grupo_abp))
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
subset_data <- subset(healthcare, select = c(`Medical Condition`, Medication, `Test.Results`))
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
subset_data <- subset(healthcare, select = c(`Medical Condition`, Medication, `Test Results`))
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
sub_healt <- subset(healthcare, select = c(`Medical Condition`, Medication, `Test Results`))
summary(sub_healt)
View(healthcare_m)
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
sub_healt <- subset(healthcare, select = c(`Medical Condition`, Medication, `Test Results`))
tabe(sub_healt)
grupo_abp <- subset(healthcare, `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
sub_healt <- subset(healthcare, select = c(`Medical Condition`, Medication, `Test Results`))
table(sub_healt)
View(healthcare)
grupo_abp <- subset(healthcare, Gender == 'Male' & `Blood Type` == 'AB+')
media_abp <- mean(grupo_abp$Age)
print(round(media_abp,2))
sub_healt <- subset(grupo_abp, select = c(`Medical Condition`, Medication, `Test Results`))
table(sub_healt)
sub_healt <- subset(grupo_abp, select = c(`Medical Condition`, Medication, `Test Results`))
prop.table(sub_healt)
sub_healt <- subset(grupo_abp, select = c(`Medical Condition`, Medication, `Test Results`))
table(sub_healt)
View(healthcare)
View(healthcare)
healthcare_maxb <- subset(healthcare, `Billing Amount` == max(`Billing Amount`))
healthcare_maxb <- subset(healthcare, `Billing Amount` == max(`Billing Amount`))
healthcare_maxb
healthcare_maxb <- subset(healthcare, `Billing Amount` == max(`Billing Amount`))
kable(healthcare_maxb)
View(healthcare_maxb)
remote_mental <- read.csv(file = 'Impact_of_Remote_Work_on_Mental_Healt.csv')
remote_mental <- read.csv(file = 'Impact_of_Remote_Work_on_Mental_Health.csv')
summary(remote_mental)
install.packages("plotly")
library(plotly)
graf1 <- plot_ly(y = remote_mental$Age, type = "box")
graf2 <- graf1 %>% add_trace(y = remote_mental$Hours_Worked_Per_Week)
graf2
library(plotly)
graf1 <- plotly(y = remote_mental$Age, type = "box", name = 'Edad')
library(plotly)
graf1 <- plot_ly(y = remote_mental$Age, type = "box", name = 'Edad')
graf2 <- graf1 %>% add_trace(y = remote_mental$Hours_Worked_Per_Week, name= 'Horas trabajadas por semana')
graf2
pairs(remote_mental)
View(remote_mental)
remote_mental_numeric <- subset(remote_mental, select =  c(Age, Years_of_Experience,
Hours_Worked_Per_Week, Number_of_Virtual_Meetings,
Work_Life_Balance_Rating, Social_Isolation_Rating,
Company_Support_for_Remote_Work))
pairs(remote_mental_numeric)
View(remote_mental)
cor	(remote_mental)
remote_mental_numeric <- subset(remote_mental, select =  c(Age, Years_of_Experience,
Hours_Worked_Per_Week, Number_of_Virtual_Meetings,
Work_Life_Balance_Rating, Social_Isolation_Rating,
Company_Support_for_Remote_Work))
cor	(remote_mental)
remote_mental_numeric <- subset(remote_mental, select =  c(Age, Years_of_Experience,
Hours_Worked_Per_Week, Number_of_Virtual_Meetings,
Work_Life_Balance_Rating, Social_Isolation_Rating,
Company_Support_for_Remote_Work))
cor	(remote_mental_numeric)
remote_mental_numeric <- subset(remote_mental, select =  c(Age, Years_of_Experience,
Hours_Worked_Per_Week, Number_of_Virtual_Meetings,
Work_Life_Balance_Rating, Social_Isolation_Rating,
Company_Support_for_Remote_Work))
kable(cor	(remote_mental_numeric))
f_relative <- prop.table(remote_mental$Job_Role)
f_relative <- table(remote_mental$Job_Role)
f_relative <- table(remote_mental$Job_Role)
f_relative
f_relative <- prop.table(table(remote_mental$Job_Role))
f_relative
library(plotly)
graf1 <- plot_ly(x = remote_mental$Age, y = remote_mental$Hours_Worked_Per_Week, type = "box")
library(plotly)
graf1 <- plot_ly(x = remote_mental$Age, y = remote_mental$Hours_Worked_Per_Week, type = "box")
graf1
